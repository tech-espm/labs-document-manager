@model DocumentType
@{
	ViewBag.Title = (Model == null ? Str.CreateDocumentType : Str.EditDocumentType);
}

<div class="modal fade" tabindex="-1" role="dialog" id="modalDelete">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="@Str.Close"><span aria-hidden="true">&times;</span></button>
				<h4 class="modal-title">@Str.Oops</h4>
			</div>
			<div class="modal-body">
				<p class="no-margin-bottom">@Str.DoYouReallyWantToDeleteTheDocumentType @Str.ThisOperationCannotBeUndone</p>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-danger" onclick="deleteItem(true)"><i class="fa fa-check"></i>@Str.Delete</button>
				<button type="button" class="btn btn-outline btn-default" data-dismiss="modal"><i class="fa fa-times"></i>@Str.Cancel</button>
			</div>
		</div>
	</div>
</div>

<form class="row" action="." method="post" id="form">
	<div class="col-lg-12">
		<div class="panel panel-default">
			<div class="panel-heading clearfix">
				<div class="pull-left">
					@Str.DocumentTypesBasicInformation
				</div>
				@if (Model != null && ViewBag.DocumentTypeDelete == true) {
					<div class="pull-right">
						<button type="button" class="btn btn-outline btn-danger btn-xs" onclick="deleteItem(false)"><i class="fa fa-times"></i>@Str.Delete</button>
					</div>
				}
			</div>
			<div class="panel-body no-bottom">
				@if (Model != null) {
					<div class="form-group text-right">
						<span class="label label-default">Id @Model.Id</span>
					</div>
				}
				<div class="row">
					<div class="col-sm-6">
						<div class="form-group">
							<label for="nameEn">@Str.Name (@Str.English)</label>
							<input id="nameEn" name="nameEn" maxlength="64" class="form-control upper" type="text" value="@(Model == null ? "" : Model.Name.ValueEn)" />
						</div>
					</div>
					<div class="col-sm-6">
						<div class="form-group">
							<label for="namePtBr">@Str.Name (@Str.Portuguese)</label>
							<input id="namePtBr" name="namePtBr" maxlength="64" class="form-control upper" type="text" value="@(Model == null ? "" : Model.Name.ValuePtBr)" />
						</div>
					</div>
				</div>
			</div>
			<div class="panel-footer">
				<input value="@(Model == null ? Str.CreateDocumentType : Str.SaveChanges)" class="btn btn-primary btn-lg btn-block" type="submit" />
			</div>
		</div>
	</div>
</form>

@section Scripts {
	<script type="text/javascript">
		//<![CDATA[
		"use strict";

		function deleteItem(confirmed) {
			if (JsonWebApi.active)
				return;

			Notification.hide();

			if (!confirmed) {
				$("#modalDelete").modal({
					backdrop: true,
					keyboard: true
				});
			} else {
				$("#modalDelete").modal("hide");

				Notification.wait();

				JsonWebApi.get("@Url.Action("Delete")", function (response) {
					if (response.success)
						window.location.href = "@Url.Action("Manage")";
					else
						Notification.error(response.value, true);
				}, "id", "@(Model == null ? 0 : Model.Id)");
			}
		}

		$("#form").validate({
			rules: {
				nameEn: {
					maxlength: 64,
					required: true
				},
				namePtBr: {
					maxlength: 64,
					required: true
				}
			},
			submitHandler: function (form) {
				if (JsonWebApi.active)
					return;

				var nameEn = _("nameEn").value, namePtBr = _("namePtBr").value;

				Notification.wait();

				@if (Model == null) {
					<text>
					JsonWebApi.post("@Url.Action("Create")", null, function (response) {
						if (response.success) {
							resetForm(form);
							Notification.success("@Html.Raw(Str.DocumentTypeSuccessfullyCreated)");
						} else {
							Notification.error(response.value, true);
						}
					}, "nameEn", nameEn, "namePtBr", namePtBr);
					</text>
				} else {
					<text>
					JsonWebApi.post("@Url.Action("Update")", null, function (response) {
						if (response.success)
							Notification.success("@Html.Raw(Str.DocumentTypeSuccessfullyChanged)");
						else
							Notification.error(response.value, true);
					}, "id", "@Model.Id", "nameEn", nameEn, "namePtBr", namePtBr);
					</text>
				}
			}
		});

		//]]>
	</script>
}
