@model Profile
@{
	ViewBag.Title = (Model == null ? "Criar Perfil" : "Editar Perfil");
}

<div class="modal fade" tabindex="-1" role="dialog" id="modalDelete">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Fechar"><span aria-hidden="true">&times;</span></button>
				<h4 class="modal-title">Oops...</h4>
			</div>
			<div class="modal-body">
				<p class="no-margin-bottom">Tem certeza que deseja excluir o perfil? Essa operação <b>NÃO</b> pode ser desfeita!</p>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-danger" onclick="deleteItem(true)"><i class="fa fa-check"></i>Excluir</button>
				<button type="button" class="btn btn-outline btn-default" data-dismiss="modal"><i class="fa fa-times"></i>Cancelar</button>
			</div>
		</div>
	</div>
</div>

<form class="row" action="." method="post" id="form">
	<div class="col-lg-12">
		<div class="panel panel-default">
			<div class="panel-heading clearfix">
				<div class="pull-left">
					Informações Básicas do Perfil
				</div>
				@if (Model != null && ViewBag.ProfileDelete == true) {
					<div class="pull-right">
						<button type="button" class="btn btn-outline btn-danger btn-xs" onclick="deleteItem(false)"><i class="fa fa-times"></i>Excluir</button>
					</div>
				}
			</div>
			<div class="panel-body no-bottom">
				@if (Model != null) {
				<div class="form-group text-right">
					<span class="label label-default">Id @Model.Id</span>
				</div>
				}
				<div class="form-group">
					<label for="name">Nome</label>
					<input id="name" name="name" maxlength="64" class="form-control upper" type="text" value="@(Model == null ? "" : Model.Name.ToString())" />
				</div>
				<div class="panel panel-default">
					<div class="panel-heading">Permissões</div>
					<div class="panel-body">
						<div class="form-group">
							<button type="button" class="btn btn-outline btn-default btn-sm" onclick="checkAll(true)"><i class="fa fa14 fa-check-square-o"></i>Todas</button>
							<div class="pull-right">
								<button type="button" class="btn btn-outline btn-default btn-sm" onclick="checkAll(false)"><i class="fa fa14 fa-minus-square-o"></i>Nenhuma</button>
							</div>
						</div>
						<div class="table-responsive">
							<table class="table table-striped table-hover no-margin-bottom">
								<tbody>
									@foreach (KeyValuePair<int, string> f in DocumentManager.Models.Profile.GetAllFeatures()) {
										bool ok = (Model != null && Model.Features.Contains(f.Key));
										<tr data-id="@f.Key" @Html.Raw(ok ? "class=\"included-row\" style=\"background: #b8f7b8\"" : "")>
											<td class="clickable col-min">
												<input type="checkbox" id="chk@(f.Key)" aria-label="@f.Value" @(ok ? "checked=\"checked\"" : "") />
											</td>
											<td class="clickable col-max">@f.Value</td>
										</tr>
									}
								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
			<div class="panel-footer">
				<input value="@(Model == null ? "Criar Perfil" : "Salvar Alterações")" class="btn btn-primary btn-lg btn-block" type="submit" />
			</div>
		</div>
	</div>
</form>

@section Scripts {
	<script type="text/javascript">
		//<![CDATA[
		"use strict";

		function deleteItem(confirmed) {
			if (JsonWebApi.active)
				return;

			Notification.hide();

			if (!confirmed) {
				$("#modalDelete").modal({
					backdrop: true,
					keyboard: true
				});
			} else {
				$("#modalDelete").modal("hide");

				Notification.wait();

				JsonWebApi.get("@Url.Action("Delete")", function (response) {
					if (response.success)
						window.location.href = "@Url.Action("Manage")";
					else
						Notification.error(response.value, true);
				}, "id", "@(Model == null ? 0 : Model.Id)");
			}
		}

		function adjustRow(chk) {
			selectRow(chk.parentNode.parentNode, chk.checked);
		}

		function checkAll(checked) {
			if (JsonWebApi.active)
				return;

			var i, chk;
			for (i = @((int)DocumentManager.Models.Feature.Min); i <= @((int)DocumentManager.Models.Feature.Max); i++) {
				if (!(chk = _("chk" + i)))
					continue;
				chk.checked = checked;
				adjustRow(chk);
			}
		}

		(function () {
			function toggleCheck(e) {
				if (e.target.tagName === "INPUT") {
					adjustRow(e.target);
					return;
				}
				var chk;
				if (!(chk = _("chk" + this.getAttribute("data-id"))))
					return;
				chk.checked = !chk.checked;
				adjustRow(chk);
			}

			var i, chk;
			for (i = @((int)DocumentManager.Models.Feature.Min); i <= @((int)DocumentManager.Models.Feature.Max); i++) {
				if (!(chk = _("chk" + i)))
					continue;
				chk.parentNode.parentNode.onclick = toggleCheck;
			}
		})();

		$("#form").validate({
			rules: {
				name: {
					maxlength: 64,
					required: true
				}
			},
			submitHandler: function (form) {
				if (JsonWebApi.active)
					return;

				var name = _("name").value, i, chk, features = [];

				for (i = @((int)DocumentManager.Models.Feature.Min); i <= @((int)DocumentManager.Models.Feature.Max); i++) {
					if (!(chk = _("chk" + i)))
						continue;
					if (chk.checked)
						features.push(i);
				}

				Notification.wait();

				@if (Model == null) {
					<text>
					JsonWebApi.post("@Url.Action("Create")", features, function (response) {
						if (response.success) {
							resetForm(form);
							checkAll(false);
							Notification.success("Perfil criado com sucesso! \uD83D\uDE04");
						} else {
							Notification.error(response.value, true);
						}
					}, "name", name);
					</text>
				} else {
					<text>
					JsonWebApi.post("@Url.Action("Update")", features, function (response) {
						if (response.success)
							Notification.success("Perfil alterado com sucesso! \uD83D\uDE04");
						else
							Notification.error(response.value, true);
					}, "id", "@Model.Id", "name", name);
					</text>
				}
			}
		});

		//]]>
	</script>
}
